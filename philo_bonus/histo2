==4845== Memcheck, a memory error detector
==4845== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4845== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4845== Command: ./philo_bonus 5 35000 100 100 4
==4845== 
--4845-- Valgrind options:
--4845--    --trace-children=yes
--4845--    -v
--4845-- Contents of /proc/version:
--4845--   Linux version 5.4.0-81-generic (buildd@lgw01-amd64-051) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #91~18.04.1-Ubuntu SMP Fri Jul 23 13:36:29 UTC 2021
--4845-- 
--4845-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--4845-- Page sizes: currently 4096, max supported 4096
--4845-- Valgrind library directory: /usr/lib/valgrind
--4845-- Reading syms from /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus
--4845-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--4845--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--4845--   .. CRC mismatch (computed ac9397f6 wanted d0d82632)
--4845--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--4845--   .. CRC is valid
--4845-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--4845--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--4845--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--4845--    object doesn't have a symbol table
--4845--    object doesn't have a dynamic symbol table
--4845-- Scheduler: using generic scheduler lock implementation.
--4845-- Reading suppressions file: /usr/lib/valgrind/default.supp
==4845== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4845-by-user42-on-???
==4845== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4845-by-user42-on-???
==4845== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4845-by-user42-on-???
==4845== 
==4845== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4845== don't want to do, unless you know exactly what you're doing,
==4845== or are doing some strange experiment):
==4845==   /usr/lib/valgrind/../../bin/vgdb --pid=4845 ...command...
==4845== 
==4845== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4845==   /path/to/gdb ./philo_bonus
==4845== and then give GDB the following command
==4845==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4845
==4845== --pid is optional if only one valgrind process is running
==4845== 
--4845-- REDIR: 0x401f320 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--4845-- REDIR: 0x401f100 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--4845-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--4845--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--4845--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--4845--    object doesn't have a symbol table
--4845-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--4845--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--4845--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--4845--    object doesn't have a symbol table
==4845== WARNING: new redirection conflicts with existing -- ignoring it
--4845--     old: 0x0401f320 (strlen              ) R-> (0000.0) 0x580608c1 ???
--4845--     new: 0x0401f320 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--4845-- REDIR: 0x401d390 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--4845-- REDIR: 0x401f860 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--4845-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.27.so
--4845--   Considering /usr/lib/debug/.build-id/bc/3c06107774266c5f7db3f1f380a3da68af90fa.debug ..
--4845--   .. build-id is valid
--4845-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--4845--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--4845--   .. CRC mismatch (computed c2c067b2 wanted d73adc7f)
--4845--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--4845--   .. CRC is valid
--4845-- REDIR: 0x50f9ce0 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8db0 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9fc0 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8800 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8de0 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fb830 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9e50 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9c80 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8d70 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8870 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9db0 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x5117160 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8d10 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f88e0 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fa010 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f88b0 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fa150 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8e10 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8830 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f8ce0 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x5103730 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fa060 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9c50 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x5117f20 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f90c0 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9f90 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50f9f60 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fb860 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x50fa0b0 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--4845-- REDIR: 0x510c3a0 (libc.so.6:__strrchr_sse2) redirected to 0x4c32790 (__strrchr_sse2)
--4845-- REDIR: 0x50f20e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--4845-- REDIR: 0x50f29c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--4845-- REDIR: 0x510c690 (libc.so.6:__strlen_sse2) redirected to 0x4c32d30 (__strlen_sse2)
--4845-- REDIR: 0x510bf70 (libc.so.6:__strchr_sse2) redirected to 0x4c328d0 (__strchr_sse2)
--4845-- REDIR: 0x51164b0 (libc.so.6:__mempcpy_sse2_unaligned) redirected to 0x4c37130 (mempcpy)
--4845-- REDIR: 0x51164d0 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4c34060 (memcpy@GLIBC_2.2.5)
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108F00: init_seph_fork (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108FCA: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff00019c is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108FF9: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109028: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109063: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10909E: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x1090D9: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109114: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10914F: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10918A: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x1091C7: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109201: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10923B: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4846== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4846-by-user42-on-???
==4846== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4846-by-user42-on-???
==4846== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4846-by-user42-on-???
==4846== 
==4846== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4846== don't want to do, unless you know exactly what you're doing,
==4846== or are doing some strange experiment):
==4846==   /usr/lib/valgrind/../../bin/vgdb --pid=4846 ...command...
==4846== 
==4846== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4846==   /path/to/gdb ./philo_bonus
==4846== and then give GDB the following command
==4846==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4846
==4846== --pid is optional if only one valgrind process is running
==4846== 
==4849== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4849-by-user42-on-???
==4849== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4849-by-user42-on-???
==4849== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4849-by-user42-on-???
==4849== 
==4849== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4849== don't want to do, unless you know exactly what you're doing,
==4849== or are doing some strange experiment):
==4849==   /usr/lib/valgrind/../../bin/vgdb --pid=4849 ...command...
==4849== 
==4849== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4849==   /path/to/gdb ./philo_bonus
==4849== and then give GDB the following command
==4849==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4849
==4849== --pid is optional if only one valgrind process is running
==4849== 
==4847== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4847-by-user42-on-???
==4847== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4847-by-user42-on-???
==4847== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4847-by-user42-on-???
==4847== 
==4847== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4847== don't want to do, unless you know exactly what you're doing,
==4847== or are doing some strange experiment):
==4847==   /usr/lib/valgrind/../../bin/vgdb --pid=4847 ...command...
==4847== 
==4847== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4847==   /path/to/gdb ./philo_bonus
==4847== and then give GDB the following command
==4847==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4847
==4847== --pid is optional if only one valgrind process is running
==4847== 
--4845-- REDIR: 0x5104ee0 (libc.so.6:__strcmp_sse2_unaligned) redirected to 0x4c33da0 (strcmp)
==4850== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4850-by-user42-on-???
==4850== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4850-by-user42-on-???
==4850== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4850-by-user42-on-???
==4850== 
==4850== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4850== don't want to do, unless you know exactly what you're doing,
==4850== or are doing some strange experiment):
==4850==   /usr/lib/valgrind/../../bin/vgdb --pid=4850 ...command...
==4850== 
==4850== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4850==   /path/to/gdb ./philo_bonus
==4850== and then give GDB the following command
==4850==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4850
==4850== --pid is optional if only one valgrind process is running
==4850== 
==4848== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4848-by-user42-on-???
==4848== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4848-by-user42-on-???
==4848== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4848-by-user42-on-???
==4848== 
==4848== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4848== don't want to do, unless you know exactly what you're doing,
==4848== or are doing some strange experiment):
==4848==   /usr/lib/valgrind/../../bin/vgdb --pid=4848 ...command...
==4848== 
==4848== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4848==   /path/to/gdb ./philo_bonus
==4848== and then give GDB the following command
==4848==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4848
==4848== --pid is optional if only one valgrind process is running
==4848== 
==4845== 
==4845== HEAP SUMMARY:
==4845==     in use at exit: 0 bytes in 0 blocks
==4845==   total heap usage: 44 allocs, 44 frees, 4,156 bytes allocated
==4845== 
==4845== All heap blocks were freed -- no leaks are possible
==4845== 
==4845== Use --track-origins=yes to see where uninitialised values come from
==4845== ERROR SUMMARY: 12 errors from 12 contexts (suppressed: 0 from 0)
==4845== 
==4845== 1 errors in context 1 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10923B: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 2 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109201: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 3 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x1091C7: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 4 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10918A: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 5 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10914F: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 6 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109114: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 7 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x1090D9: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 8 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x10909E: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 9 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109063: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 10 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109028: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 11 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108FF9: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff0001cc is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== 
==4845== 1 errors in context 12 of 12:
==4845== Syscall param write(buf) points to uninitialised byte(s)
==4845==    at 0x4E4D291: write (write.c:27)
==4845==    by 0x4E4C278: sem_open (sem_open.c:269)
==4845==    by 0x10B92F: custom_sem_init (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108F00: init_seph_fork (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x108FCA: init_seph (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==    by 0x109325: main (in /home/user42/Bureau/Philosophers/philo_bonus/philo_bonus)
==4845==  Address 0x1fff00019c is on thread 1's stack
==4845==  in frame #1, created by sem_open (sem_open.c:141)
==4845== 
==4845== ERROR SUMMARY: 12 errors from 12 contexts (suppressed: 0 from 0)
--4846-- REDIR: 0x50f50a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--4849-- REDIR: 0x50f50a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--4847-- REDIR: 0x50f50a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--4850-- REDIR: 0x50f50a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--4848-- REDIR: 0x50f50a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
